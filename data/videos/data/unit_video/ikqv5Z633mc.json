{"kind": "youtube#video", "etag": "cYo5pBTRlhzZGiXOVhuSrYhMqQM", "id": "ikqv5Z633mc", "snippet": {"publishedAt": "2017-02-06T15:30:02Z", "channelId": "UCuP2vJ6kRutQBfRmdcI92mA", "title": "Swift 3: Twitter - How to Implement Singleton and Completion Blocks (Ep 12)", "description": "Singletons are often a great way to organize code into an object that only needs to be initialized once and be available everywhere in your program.  One simple example of this is UIApplication.shared where all of our application's properties are easily accessible via this object.\n\nToday, we'll take a close look at how we can extract all of our networking code into a Singleton class.  We will then implement a Completion Block to handle the success of our asynchronous call. Finally I'll walk through a brief exercise where we look at the sequence of code that is being executed through this whole process.\n\nFacebook Group\nhttps://www.facebook.com/groups/1240636442694543/\n\niOS Basic Training Course\nhttps://www.letsbuildthatapp.com/basic-training\n\nCompleted Source Code\nhttps://www.letsbuildthatapp.com/course_video?id=882\n\nFollow me on Twitter: https://twitter.com/buildthatapp", "thumbnails": {"default": {"url": "https://i.ytimg.com/vi/ikqv5Z633mc/default.jpg", "width": 120, "height": 90}, "medium": {"url": "https://i.ytimg.com/vi/ikqv5Z633mc/mqdefault.jpg", "width": 320, "height": 180}, "high": {"url": "https://i.ytimg.com/vi/ikqv5Z633mc/hqdefault.jpg", "width": 480, "height": 360}, "standard": {"url": "https://i.ytimg.com/vi/ikqv5Z633mc/sddefault.jpg", "width": 640, "height": 480}, "maxres": {"url": "https://i.ytimg.com/vi/ikqv5Z633mc/maxresdefault.jpg", "width": 1280, "height": 720}}, "channelTitle": "Lets Build That App", "tags": ["ios", "swift", "development", "tutorial", "learn", "xcode", "programming", "code"], "categoryId": "27", "liveBroadcastContent": "none", "defaultLanguage": "en", "localized": {"title": "Swift 3: Twitter - How to Implement Singleton and Completion Blocks (Ep 12)", "description": "Singletons are often a great way to organize code into an object that only needs to be initialized once and be available everywhere in your program.  One simple example of this is UIApplication.shared where all of our application's properties are easily accessible via this object.\n\nToday, we'll take a close look at how we can extract all of our networking code into a Singleton class.  We will then implement a Completion Block to handle the success of our asynchronous call. Finally I'll walk through a brief exercise where we look at the sequence of code that is being executed through this whole process.\n\nFacebook Group\nhttps://www.facebook.com/groups/1240636442694543/\n\niOS Basic Training Course\nhttps://www.letsbuildthatapp.com/basic-training\n\nCompleted Source Code\nhttps://www.letsbuildthatapp.com/course_video?id=882\n\nFollow me on Twitter: https://twitter.com/buildthatapp"}, "defaultAudioLanguage": "en"}, "contentDetails": {"duration": "PT12M50S", "dimension": "2d", "definition": "hd", "caption": "false", "licensedContent": true, "contentRating": {}, "projection": "rectangular"}, "statistics": {"viewCount": "28440", "likeCount": "616", "dislikeCount": "5", "favoriteCount": "0", "commentCount": "126"}, "topicDetails": {"relevantTopicIds": ["/m/01k8wb", "/m/01k8wb"], "topicCategories": ["https://en.wikipedia.org/wiki/Knowledge"]}, "has_face": true, "detection_confidence": 0.9998396635055542}